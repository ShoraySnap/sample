<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:ManagerUI.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006">

    <BooleanToVisibilityConverter x:Key="BoolToVisibility" />
    <SolidColorBrush x:Key="Colors/Neutral/900" Color="#2d2e37" />
    <SolidColorBrush x:Key="Colors/Neutral/800" Color="#484B5B" />
    <SolidColorBrush x:Key="Colors/Neutral/600" Color="#767B93" />
    <SolidColorBrush x:Key="Colors/Neutral/500" Color="#AFB2C0" />
    <SolidColorBrush x:Key="Colors/Neutral/400" Color="#C6C8D2" />
    <SolidColorBrush x:Key="Colors/Neutral/300" Color="#DDDEE4" />
    <SolidColorBrush x:Key="Colors/Neutral/200" Color="#E8E9ED" />
    <SolidColorBrush x:Key="Colors/Neutral/100" Color="#F4F4F6" />
    <SolidColorBrush x:Key="Colors/Red/400" Color="#D24B4E" />
    <SolidColorBrush x:Key="Colors/Blue/300" Color="#1A5EE5" />
    <SolidColorBrush x:Key="Colors/Neutral/0" Color="#FFFFFF" />
    <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070" />
    <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD" />
    <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1" />
    <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6" />
    <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B" />
    <FontFamily x:Key="Inter">/Resources/#Inter</FontFamily>
    <Storyboard x:Key="RotateStoryboard">
        <DoubleAnimation
            RepeatBehavior="Forever"
            Storyboard.TargetName="rotationTransform"
            Storyboard.TargetProperty="Angle"
            From="0"
            To="360"
            Duration="0:0:1" />
    </Storyboard>
    <Style x:Name="mainForeground" TargetType="{x:Type TextBlock}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding ImageBackground}" Value="true">
                <Setter Property="Foreground" Value="White" />
            </DataTrigger>
            <DataTrigger Binding="{Binding WhiteBackground}" Value="true">
                <Setter Property="Foreground" Value="{StaticResource Colors/Neutral/900}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="animatedList" TargetType="FrameworkElement">
        <Setter Property="Visibility" Value="Hidden" />
        <Style.Triggers>
            <Trigger Property="Visibility" Value="Visible">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetProperty="Opacity"
                                From="0.0"
                                To="1.0"
                                Duration="0:0:0.2" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
            </Trigger>
        </Style.Triggers>
    </Style>
    <converters:ProgressBarWidthConverter x:Key="ProgressBarWidthConverter" />
    <Style x:Key="RoundedProgressBar" TargetType="{x:Type ProgressBar}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Grid
                        Height="4"
                        MinWidth="50"
                        Background="{TemplateBinding Background}">
                        <Border
                            x:Name="PART_Track"
                            Width="238"
                            Height="2"
                            Background="{StaticResource Colors/Neutral/300}"
                            BorderThickness="0"
                            CornerRadius="1" />
                        <Border
                            x:Name="PART_Back"
                            Margin="{TemplateBinding BorderThickness}"
                            HorizontalAlignment="Left"
                            Background="{StaticResource Colors/Blue/300}"
                            BorderThickness="0"
                            CornerRadius="1">
                            <Border.Width>
                                <MultiBinding Converter="{StaticResource ProgressBarWidthConverter}">
                                    <Binding Path="Value" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="Minimum" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="Maximum" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="ActualWidth" RelativeSource="{RelativeSource TemplatedParent}" />
                                </MultiBinding>
                            </Border.Width>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding WhiteBackground}" Value="false">
                            <Setter TargetName="PART_Track" Property="Background" Value="{StaticResource Colors/Neutral/600}" />
                            <Setter TargetName="PART_Back" Property="Background" Value="White" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="Transparent" />
    </Style>
    <Style x:Key="RoundedWhiteProgressBar" TargetType="{x:Type ProgressBar}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Grid
                        Height="4"
                        MinWidth="50"
                        Background="{TemplateBinding Background}">
                        <Border
                            x:Name="PART_Track"
                            Width="238"
                            Height="2"
                            Background="{StaticResource Colors/Neutral/600}"
                            BorderThickness="0"
                            CornerRadius="1" />
                        <Border
                            Margin="{TemplateBinding BorderThickness}"
                            HorizontalAlignment="Left"
                            Background="White"
                            BorderThickness="0"
                            CornerRadius="1">
                            <Border.Width>
                                <MultiBinding Converter="{StaticResource ProgressBarWidthConverter}">
                                    <Binding Path="Value" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="Minimum" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="Maximum" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="ActualWidth" RelativeSource="{RelativeSource TemplatedParent}" />
                                </MultiBinding>
                            </Border.Width>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="Transparent" />
    </Style>

    <Style x:Key="Button_Primary" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{StaticResource Colors/Neutral/0}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="14,0" />
        <Setter Property="Height" Value="32" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="border"
                        Background="{StaticResource Colors/Neutral/900}"
                        CornerRadius="6">
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="False" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#484B5B" />
                            <Setter TargetName="border" Property="BorderBrush" Value="#484B5B" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#FF5B5953" />
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF5B5953" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource Colors/Neutral/300}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Button_24" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{StaticResource Colors/Neutral/0}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="8,0" />
        <Setter Property="Height" Value="24" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="border"
                        Background="{StaticResource Colors/Neutral/900}"
                        CornerRadius="6">
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="False" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#484B5B" />
                            <Setter TargetName="border" Property="BorderBrush" Value="#484B5B" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#FF5B5953" />
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF5B5953" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource Colors/Neutral/300}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollViewerStyle" TargetType="ScrollViewer">
        <Style.Resources>
            <Style x:Key="ScrollBarTrackThumb" TargetType="{x:Type Thumb}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Grid x:Name="Grid">
                                <Rectangle
                                    Width="Auto"
                                    Height="Auto"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    Fill="Transparent" />
                                <Border
                                    x:Name="CornerScrollBarRectangle"
                                    Width="Auto"
                                    Height="Auto"
                                    Margin="0,1,0,1"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    Background="{TemplateBinding Background}"
                                    CornerRadius="5" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Tag" Value="Horizontal">
                                    <Setter TargetName="CornerScrollBarRectangle" Property="Width" Value="Auto" />
                                    <Setter TargetName="CornerScrollBarRectangle" Property="Height" Value="6" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="{x:Type ScrollBar}">
                <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
                <Setter Property="Foreground" Value="#ADABAB" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Width" Value="7" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid
                                x:Name="GridRoot"
                                Width="7"
                                Background="{TemplateBinding Background}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="0.00001*" />
                                </Grid.RowDefinitions>
                                <Track
                                    x:Name="PART_Track"
                                    Grid.Row="0"
                                    Focusable="false"
                                    IsDirectionReversed="true">
                                    <Track.Thumb>
                                        <Thumb
                                            x:Name="Thumb"
                                            Background="{TemplateBinding Foreground}"
                                            Style="{DynamicResource ScrollBarTrackThumb}" />
                                    </Track.Thumb>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton
                                            x:Name="PageUp"
                                            Command="ScrollBar.PageDownCommand"
                                            Focusable="false"
                                            Opacity="0" />
                                    </Track.IncreaseRepeatButton>
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton
                                            x:Name="PageDown"
                                            Command="ScrollBar.PageUpCommand"
                                            Focusable="false"
                                            Opacity="0" />
                                    </Track.DecreaseRepeatButton>
                                </Track>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="true">
                                    <Setter TargetName="Thumb" Property="Background" Value="{StaticResource Colors/Neutral/200}" />
                                </Trigger>
                                <Trigger SourceName="Thumb" Property="IsMouseOver" Value="true">
                                    <Setter TargetName="Thumb" Property="Background" Value="{StaticResource Colors/Neutral/300}" />
                                </Trigger>
                                <Trigger SourceName="Thumb" Property="IsDragging" Value="true">
                                    <Setter TargetName="Thumb" Property="Background" Value="{StaticResource Colors/Neutral/400}" />
                                </Trigger>

                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter TargetName="Thumb" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                                <Trigger Property="Orientation" Value="Horizontal">
                                    <Setter TargetName="GridRoot" Property="LayoutTransform">
                                        <Setter.Value>
                                            <RotateTransform Angle="-90" />
                                        </Setter.Value>
                                    </Setter>
                                    <Setter TargetName="PART_Track" Property="LayoutTransform">
                                        <Setter.Value>
                                            <RotateTransform Angle="-90" />
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Width" Value="Auto" />
                                    <Setter Property="Height" Value="8" />
                                    <Setter TargetName="Thumb" Property="Tag" Value="Horizontal" />
                                    <Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand" />
                                    <Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="{x:Type ScrollViewer}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollViewer}">
                            <Grid x:Name="Grid" HorizontalAlignment="Right">
                                <ScrollContentPresenter
                                    x:Name="PART_ScrollContentPresenter"
                                    Margin="{TemplateBinding Padding}"
                                    CanContentScroll="{TemplateBinding CanContentScroll}"
                                    CanHorizontallyScroll="False"
                                    CanVerticallyScroll="False"
                                    Content="{TemplateBinding Content}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}" />
                                <ScrollBar
                                    x:Name="PART_VerticalScrollBar"
                                    HorizontalAlignment="Right"
                                    AutomationProperties.AutomationId="VerticalScrollBar"
                                    Cursor="Arrow"
                                    Maximum="{TemplateBinding ScrollableHeight}"
                                    Minimum="0"
                                    ViewportSize="{TemplateBinding ViewportHeight}"
                                    Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                    Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.Resources>
    </Style>

    <Style x:Key="Button_Secondary" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{StaticResource Colors/Neutral/600}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="14,0" />
        <Setter Property="Height" Value="32" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="border"
                        Background="Transparent"
                        CornerRadius="6"
                        SnapsToDevicePixels="false">
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="false" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#FFB8B6B6" />
                            <Setter TargetName="border" Property="BorderBrush" Value="#FFB8B6B6" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#FF5B5953" />
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF5B5953" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource Colors/Neutral/300}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Button_Tertiary" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{StaticResource Colors/Neutral/600}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="16,0" />
        <Setter Property="Height" Value="32" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="border"
                        BorderBrush="{StaticResource Colors/Neutral/300}"
                        BorderThickness="1"
                        CornerRadius="6"
                        SnapsToDevicePixels="false">
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="false" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#FFB8B6B6" />
                            <Setter TargetName="border" Property="BorderBrush" Value="#FFB8B6B6" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#FF5B5953" />
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF5B5953" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource Colors/Neutral/300}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Button_Quaternary" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{StaticResource Colors/Neutral/800}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="16,0" />
        <Setter Property="Height" Value="32" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="border"
                        Background="White"
                        BorderThickness="0"
                        CornerRadius="6"
                        SnapsToDevicePixels="false">
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="false" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#DDDEE4" />
                            <Setter TargetName="border" Property="BorderBrush" Value="#DDDEE4" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#FF5B5953" />
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF5B5953" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource Colors/Neutral/300}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Button_Quinary" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{StaticResource Colors/Neutral/800}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="14,0" />
        <Setter Property="Height" Value="32" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="border"
                        Background="White"
                        BorderBrush="{StaticResource Colors/Neutral/200}"
                        BorderThickness="1"
                        CornerRadius="6"
                        SnapsToDevicePixels="false">
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="false" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Colors/Blue/300}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#FF5B5953" />
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF5B5953" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource Colors/Neutral/300}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Button_6" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{StaticResource Colors/Neutral/600}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="4,4" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="border"
                        Background="Transparent"
                        CornerRadius="6"
                        SnapsToDevicePixels="false">
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="false" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource Colors/Neutral/900}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>
    <Style x:Key="Button_7" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{StaticResource Colors/Neutral/600}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="border"
                        Background="Transparent"
                        CornerRadius="6"
                        SnapsToDevicePixels="false">
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="false" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="#F4F4F6" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>


    <Style x:Key="HeaderStyle/500" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="Background" Value="{StaticResource Colors/Neutral/100}" />
        <Setter Property="Foreground" Value="{StaticResource Colors/Neutral/600}" />
        <Setter Property="SeparatorVisibility" Value="Hidden" />
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="Height" Value="40" />
    </Style>
    <Style x:Key="HeaderStyle/400" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="Background" Value="{StaticResource Colors/Neutral/100}" />
        <Setter Property="Foreground" Value="{StaticResource Colors/Neutral/600}" />
        <Setter Property="SeparatorVisibility" Value="Hidden" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Height" Value="40" />
    </Style>
    <Style x:Key="TransparentCell" TargetType="{x:Type DataGridCell}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="Transparent" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="TransparentRow" TargetType="{x:Type DataGridRow}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="Transparent" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SVGCheckBoxWithText" TargetType="CheckBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid
                        Height="24"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="8" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid x:Name="CheckedMark">
                            <Path
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Data="M15.417 17.25H2.583C1.57 17.25 0.75 16.429 0.75 15.417V2.583C0.75 1.57 1.571 0.75 2.583 0.75H15.416C16.429 0.75 17.249 1.571 17.249 2.583V15.416C17.25 16.429 16.429 17.25 15.417 17.25Z"
                                Fill="#484B5B"
                                Stroke="#484B5B"
                                StrokeEndLineCap="round"
                                StrokeLineJoin="round"
                                StrokeStartLineCap="round"
                                StrokeThickness="1.5" />
                            <Path
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Data="M1 3.75L4.5 7.25L11 0.75"
                                Stroke="white"
                                StrokeEndLineCap="round"
                                StrokeLineJoin="round"
                                StrokeStartLineCap="round"
                                StrokeThickness="1.5" />
                        </Grid>
                        <Grid x:Name="UnCheckedMark">
                            <Border Background="Transparent">
                                <Path
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Data="M15.417 17.25H2.583C1.57 17.25 0.75 16.429 0.75 15.417V2.583C0.75 1.57 1.571 0.75 2.583 0.75H15.416C16.429 0.75 17.249 1.571 17.249 2.583V15.416C17.25 16.429 16.429 17.25 15.417 17.25Z"
                                    Stroke="#C6C8D2"
                                    StrokeEndLineCap="round"
                                    StrokeLineJoin="round"
                                    StrokeStartLineCap="round"
                                    StrokeThickness="1.5" />
                            </Border>
                        </Grid>
                        <TextBlock
                            Grid.Column="2"
                            VerticalAlignment="Center"
                            Foreground="{StaticResource Colors/Neutral/600}"
                            SnapsToDevicePixels="True"
                            Text="{TemplateBinding Content}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CheckedMark" Property="Visibility" Value="Visible" />
                            <Setter TargetName="UnCheckedMark" Property="Visibility" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="UnCheckedMark" Property="Visibility" Value="Visible" />
                            <Setter TargetName="CheckedMark" Property="Visibility" Value="Hidden" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
